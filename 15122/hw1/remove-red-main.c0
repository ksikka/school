#use <conio>
#use <string>
#use <img>
#use <parse>
#use <args>

int main() {
  image_t source;
  image_t dest;
  int width;
  int height;
  pixel[] inpixels;
  pixel[] outpixels;
  pixel[] gbpixels;
  string *output = alloc(string);
  string *input = alloc(string);
  string type = "remove-red";
  string[] args;
  int i;
  
  args_string("-o", output);
  args_string("-i", input);

  args = args_parse()->argv;

  if (string_equal("", *input)) {
    println("Usage: remove-red -i <input image> [-o <output image>]");
    return 1;
  }

  if (string_equal("", *output))
    *output = string_join(type, string_join("_", *input));

  print("Input image:  ");
  println(*input);
  print("Output image: ");
  println(*output);

  source = image_load(*input);
  width = image_width(source);
  height = image_height(source);

  print("Loaded image.  Dimensions are ");
  printint(width);
  print(" by ");
  printint(height);
  println(".");

  dest = image_create(width, height);
  inpixels = image_data(source);
  outpixels = image_data(dest);
  print("Removing red channel...");
  gbpixels = remove_red(inpixels, width, height);
  println("");
  //@assert \length(gbpixels) == width*height;
  for (i = 0; i < width*height; i++)
    outpixels[i] = gbpixels[i];
  print("Saving output...");
  image_save(dest, *output);
  println("");
  image_destroy(dest);
  image_destroy(source);
  return 0;
}
